name: Deploy BLuxA Corp API to Cloud Run

on:
  push:
    branches: [ "main", "production" ]
  pull_request:
    branches: [ "main" ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: us-east4
  SERVICE_NAME: bluxa-api

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run basic health check
        run: |
          python -c "import flask; print('Flask import successful')"
          python -c "import stripe; print('Stripe import successful')"
          python -c "import supabase; print('Supabase import successful')"

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production'
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker to use gcloud as credential helper
        run: |
          gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} .
          docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 300 \
            --concurrency 80 \
            --set-env-vars FLASK_SECRET_KEY="${{ secrets.FLASK_SECRET_KEY }}" \
            --set-env-vars ALLOWED_ORIGINS="${{ secrets.ALLOWED_ORIGINS }}" \
            --set-env-vars SUPABASE_URL="${{ secrets.SUPABASE_URL }}" \
            --set-env-vars SUPABASE_ANON_KEY="${{ secrets.SUPABASE_ANON_KEY }}" \
            --set-env-vars SUPABASE_SERVICE_KEY="${{ secrets.SUPABASE_SERVICE_KEY }}" \
            --set-env-vars STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
            --set-env-vars STRIPE_WEBHOOK_SECRET="${{ secrets.STRIPE_WEBHOOK_SECRET }}" \
            --set-env-vars RESEND_API_KEY="${{ secrets.RESEND_API_KEY }}" \
            --set-env-vars WHATSAPP_WEBHOOK_URL="${{ secrets.WHATSAPP_WEBHOOK_URL }}" \
            --set-env-vars SEED_TOKEN="${{ secrets.SEED_TOKEN }}"

      - name: Get service URL
        run: |
          SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
          echo "Service deployed to: $SERVICE_URL"
          echo "Health check: $SERVICE_URL/health"
          echo "API docs: $SERVICE_URL/docs"
